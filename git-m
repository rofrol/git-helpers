#!/bin/sh -e

if [ -z ${1} ]; then
	echo "Script to update specified branch, rebase on it, checkout to it, merge previous branch, push, delete prev branch on local and origin"
	echo -e "\nUsage:"
	echo "  git m <branch>           # 'origin' as default remote"
	echo "  git m <remote> <branch>"

	exit 1;
fi

if [ -z ${2} ]; then
	branch=${1}
	remote="origin"
else
	remote=${1}
	branch=${2}
fi

prev_branch=$(git symbolic-ref -q HEAD --short)

if [ "${prev_branch}" == "${branch}" ]; then
	echo "Cannot merge with itself. Exiting"
	exit 1;
fi	

remote_prev_branch=$(git config branch.${prev_branch}.remote)

# like git checkout ${branch} && git pull --ff-only [2]
git fetch ${remote} ${branch}:${branch} && \
# stops here when previous failed, ie. no remote ${branch}
git rebase ${branch} && \
# merge branch without checkout [2]
git fetch . ${prev_branch}:${branch} && \
read -p "git push ${remote} ${branch}? [y] " -n 1 -r && \
[[ $REPLY =~ ^[Yy]$ ]] && \
git push ${remote} ${branch} && \
read -p "Delete branch '${prev_branch}'? [y] " -n 1 -r && \
[[ $REPLY =~ ^[Yy]$ ]] && \
git checkout ${branch} && \
# delete local branch
git branch -d ${prev_branch} && \
# delete remote branch
[ ! -z ${remote_prev_branch} ] && git push ${remote} --delete ${prev_branch}

# [1] http://serverfault.com/questions/175052/how-to-tell-which-local-branch-is-tracking-which-remote-branch-in-git/384862#384862
# [2] http://stackoverflow.com/questions/3216360/merge-update-and-pull-git-branches-without-using-checkouts
